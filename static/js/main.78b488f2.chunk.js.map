{"version":3,"sources":["actions/api.js","actions/members.js","reducers/members.js","actions/buku.js","reducers/buku.js","actions/apiPeminjaman.js","actions/peminjaman.js","reducers/peminjaman.js","reducers/index.js","actions/store.js","components/useForm.js","components/member/MembersForm.js","components/member/Members.js","components/buku/BukuForm.js","components/buku/Buku.js","components/Peminjaman.js","App.js","serviceWorker.js","index.js"],"names":["endpoint","url","fetchall","axios","get","create","newRecord","post","update","id","updateRecord","put","delete","MEMBER_ACTION_TYPES","initialState","list","BUKU_ACTION_TYPES","baseUrl","PEMINJAMAN_ACTION_TYPES","reducers","combineReducers","membersRequest","state","action","type","payload","map","x","id_member","filter","bukuRequest","id_buku","peminjamanRequest","id_peminjaman","store","createStore","compose","applyMiddleware","thunk","useForm","initialFieldValues","validate","setCurrentId","useState","values","setValues","errors","setErrors","handleInputChange","event","target","name","value","fieldValue","resetForm","nama","alamat","no_hp","mapDispatchToProps","createNewMember","data","onSuccess","onError","dispatch","api","then","res","catch","err","updateMemberRecord","connect","membersList","withStyles","theme","root","marginBottom","spacing","marginRight","buttonMargin","margin","classes","props","addToast","useToasts","fieldValues","temp","Object","every","useEffect","currentId","find","autoComplete","noValidate","className","onSubmit","preventDefault","appearance","Grid","container","item","xs","TextField","variant","label","onChange","fullWidth","inputProps","maxLength","error","helperText","Button","color","onClick","fetchAllMembers","console","log","deleteMemberRecord","fontSize","paper","padding","Paper","elevation","TableContainer","TableHead","TableRow","TableCell","TableBody","record","key","hover","ButtonGroup","Edit","Delete","window","confirm","judul","pengarang","tahun_terbit","createNewBuku","updateBukuRecord","bukuList","fetchAllBuku","deleteBukuRecord","createNewPeminjaman","Add","fetchAllPeminjaman","deletePeminjamanRecord","updatePeminjamanRecord","peminjamanList","lg","tanggal_peminjaman","tanggal_pengembalian","Check","TabPanel","children","index","Typography","component","role","hidden","Box","App","setValue","autoDismiss","Container","maxWidth","AppBar","position","Tabs","aria-label","newValue","Tab","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.78b488f2.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst baseUrl = 'https://l200180151-perpustakaan-api.herokuapp.com/';\r\n\r\nexport default {\r\n  perpustakaanApi(endpoint) {\r\n    const url = baseUrl + endpoint;\r\n    return {\r\n      fetchall: () => axios.get(url),\r\n      create: (newRecord) => axios.post(`${url}/add`, newRecord),\r\n      update: (id, updateRecord) =>\r\n        axios.put(`${url}/update?id=${id}`, updateRecord),\r\n      delete: (id) => axios.delete(`${url}/delete?id=${id}`),\r\n    };\r\n  },\r\n};\r\n","import api from './api';\r\n\r\nexport const MEMBER_ACTION_TYPES = {\r\n  CREATE: 'MEMBER_CREATE',\r\n  UPDATE: 'MEMBER_UPDATE',\r\n  DELETE: 'MEMBER_DELETE',\r\n  FETCH_ALL: 'MEMBER_FETCH_ALL',\r\n};\r\n\r\nexport const fetchMembers = () => (dispatch) => {\r\n  api\r\n    .perpustakaanApi('member')\r\n    .fetchall()\r\n    .then((res) => {\r\n      dispatch({\r\n        type: MEMBER_ACTION_TYPES.FETCH_ALL,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const createMember = (data, onSuccess, onError) => (dispatch) => {\r\n  api\r\n    .perpustakaanApi('member')\r\n    .create(data)\r\n    .then((res) => {\r\n      dispatch({ type: MEMBER_ACTION_TYPES.CREATE, payload: res.data });\r\n      onSuccess();\r\n    })\r\n    .catch((err) => onError());\r\n};\r\n\r\nexport const updateMember = (id, data, onSuccess, onError) => (dispatch) => {\r\n  api\r\n    .perpustakaanApi('member')\r\n    .update(id, data)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: MEMBER_ACTION_TYPES.UPDATE,\r\n        payload: { id_member: id, ...data },\r\n      });\r\n      onSuccess();\r\n    })\r\n    .catch((err) => onError());\r\n};\r\n\r\nexport const deleteMember = (id, onSuccess) => (dispatch) => {\r\n  api\r\n    .perpustakaanApi('member')\r\n    .delete(id)\r\n    .then((res) => {\r\n      dispatch({ type: MEMBER_ACTION_TYPES.DELETE, payload: id });\r\n      onSuccess();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n","import { MEMBER_ACTION_TYPES } from '../actions/members';\r\n\r\nconst initialState = {\r\n  list: [],\r\n};\r\n\r\nexport const membersRequest = (state = initialState, action = {}) => {\r\n  switch (action.type) {\r\n    case MEMBER_ACTION_TYPES.FETCH_ALL:\r\n      return {\r\n        ...state,\r\n        list: [...action.payload],\r\n      };\r\n    case MEMBER_ACTION_TYPES.CREATE:\r\n      return {\r\n        ...state,\r\n        list: [...state.list, action.payload],\r\n      };\r\n    case MEMBER_ACTION_TYPES.UPDATE:\r\n      return {\r\n        ...state,\r\n        list: state.list.map((x) =>\r\n          x.id_member === action.payload.id_member ? action.payload : x\r\n        ),\r\n      };\r\n    case MEMBER_ACTION_TYPES.DELETE:\r\n      return {\r\n        ...state,\r\n        list: state.list.filter((x) => x.id_member !== action.payload),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import api from './api';\r\n\r\nexport const BUKU_ACTION_TYPES = {\r\n  CREATE: 'BUKU_CREATE',\r\n  UPDATE: 'BUKU_UPDATE',\r\n  DELETE: 'BUKU_DELETE',\r\n  FETCH_ALL: 'BUKU_FETCH_ALL',\r\n};\r\n\r\nexport const fetchBuku = () => (dispatch) => {\r\n  api\r\n    .perpustakaanApi('buku')\r\n    .fetchall()\r\n    .then((res) => {\r\n      dispatch({\r\n        type: BUKU_ACTION_TYPES.FETCH_ALL,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const createBuku = (data, onSuccess, onError) => (dispatch) => {\r\n  api\r\n    .perpustakaanApi('buku')\r\n    .create(data)\r\n    .then((res) => {\r\n      dispatch({ type: BUKU_ACTION_TYPES.CREATE, payload: res.data });\r\n      onSuccess();\r\n    })\r\n    .catch((err) => onError());\r\n};\r\n\r\nexport const updateBuku = (id, data, onSuccess, onError) => (dispatch) => {\r\n  api\r\n    .perpustakaanApi('buku')\r\n    .update(id, data)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: BUKU_ACTION_TYPES.UPDATE,\r\n        payload: { id_buku: id, ...data },\r\n      });\r\n      onSuccess();\r\n    })\r\n    .catch((err) => onError());\r\n};\r\n\r\nexport const deleteBuku = (id, onSuccess) => (dispatch) => {\r\n  api\r\n    .perpustakaanApi('buku')\r\n    .delete(id)\r\n    .then((res) => {\r\n      dispatch({ type: BUKU_ACTION_TYPES.DELETE, payload: id });\r\n      onSuccess();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n","import { BUKU_ACTION_TYPES } from '../actions/buku';\r\n\r\nconst initialState = {\r\n  list: [],\r\n};\r\n\r\nexport const bukuRequest = (state = initialState, action = {}) => {\r\n  switch (action.type) {\r\n    case BUKU_ACTION_TYPES.FETCH_ALL:\r\n      return {\r\n        ...state,\r\n        list: [...action.payload],\r\n      };\r\n    case BUKU_ACTION_TYPES.CREATE:\r\n      return {\r\n        ...state,\r\n        list: [...state.list, action.payload],\r\n      };\r\n    case BUKU_ACTION_TYPES.UPDATE:\r\n      return {\r\n        ...state,\r\n        list: state.list.map((x) =>\r\n          x.id_buku === action.payload.id_buku ? action.payload : x\r\n        ),\r\n      };\r\n    case BUKU_ACTION_TYPES.DELETE:\r\n      return {\r\n        ...state,\r\n        list: state.list.filter((x) => x.id_buku !== action.payload),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import axios from 'axios';\r\n\r\nconst baseUrl = 'https://l200180151-perpustakaan-api.herokuapp.com/';\r\n\r\nexport default {\r\n  peminjamanApi(url = baseUrl + 'peminjaman') {\r\n    return {\r\n      fetchall: () => axios.get(url),\r\n      create: (id) => axios.post(`${url}/add?id=${id}`),\r\n      update: (id) => axios.put(`${url}/update?id=${id}`),\r\n      delete: (id) => axios.delete(`${url}/delete?id=${id}`),\r\n    };\r\n  },\r\n};\r\n","import api from './apiPeminjaman';\r\n\r\nexport const PEMINJAMAN_ACTION_TYPES = {\r\n  CREATE: 'PEMINJAMAN_CREATE',\r\n  UPDATE: 'PEMINJAMAN_UPDATE',\r\n  DELETE: 'PEMINJAMAN_DELETE',\r\n  FETCH_ALL: 'PEMINJAMAN_FETCH_ALL',\r\n};\r\n\r\nexport const fetchPeminjaman = () => (dispatch) => {\r\n  api\r\n    .peminjamanApi()\r\n    .fetchall()\r\n    .then((res) => {\r\n      dispatch({\r\n        type: PEMINJAMAN_ACTION_TYPES.FETCH_ALL,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const createPeminjaman = (id, onSuccess) => (dispatch) => {\r\n  api\r\n    .peminjamanApi()\r\n    .create(id)\r\n    .then((res) => {\r\n      dispatch({ type: PEMINJAMAN_ACTION_TYPES.CREATE, payload: res.data });\r\n      onSuccess();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const updatePeminjaman = (id, onSuccess) => (dispatch) => {\r\n  api\r\n    .peminjamanApi()\r\n    .update(id)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: PEMINJAMAN_ACTION_TYPES.UPDATE,\r\n        payload: res.data,\r\n      });\r\n      onSuccess();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const deletePeminjaman = (id, onSuccess) => (dispatch) => {\r\n  api\r\n    .peminjamanApi()\r\n    .delete(id)\r\n    .then((res) => {\r\n      dispatch({ type: PEMINJAMAN_ACTION_TYPES.DELETE, payload: id });\r\n      onSuccess();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n","import { PEMINJAMAN_ACTION_TYPES } from '../actions/peminjaman';\r\n\r\nconst initialState = {\r\n  list: [],\r\n};\r\n\r\nexport const peminjamanRequest = (state = initialState, action = {}) => {\r\n  switch (action.type) {\r\n    case PEMINJAMAN_ACTION_TYPES.FETCH_ALL:\r\n      return {\r\n        ...state,\r\n        list: [...action.payload],\r\n      };\r\n    case PEMINJAMAN_ACTION_TYPES.CREATE:\r\n      return {\r\n        ...state,\r\n        list: [...state.list, action.payload],\r\n      };\r\n    case PEMINJAMAN_ACTION_TYPES.UPDATE:\r\n      return {\r\n        ...state,\r\n        list: state.list.map((x) =>\r\n          x.id_peminjaman === action.payload.id_peminjaman ? action.payload : x\r\n        ),\r\n      };\r\n    case PEMINJAMAN_ACTION_TYPES.DELETE:\r\n      return {\r\n        ...state,\r\n        list: state.list.filter((x) => x.id_peminjaman !== action.payload),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { membersRequest } from './members';\r\nimport { bukuRequest } from './buku';\r\nimport { peminjamanRequest } from './peminjaman';\r\n\r\nexport const reducers = combineReducers({\r\n  membersRequest,\r\n  bukuRequest,\r\n  peminjamanRequest,\r\n});\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { reducers } from '../reducers/index';\r\n\r\nexport const store = createStore(reducers, compose(applyMiddleware(thunk)));\r\n","import { useState } from 'react';\r\n\r\nconst useForm = (initialFieldValues, validate, setCurrentId) => {\r\n  const [values, setValues] = useState(initialFieldValues);\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    const fieldValue = { [name]: value };\r\n    setValues({\r\n      ...values,\r\n      ...fieldValue,\r\n    });\r\n    validate(fieldValue);\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setValues({\r\n      ...initialFieldValues,\r\n    });\r\n    setErrors({});\r\n    setCurrentId(0);\r\n  };\r\n\r\n  return {\r\n    values,\r\n    setValues,\r\n    handleInputChange,\r\n    errors,\r\n    setErrors,\r\n    resetForm,\r\n  };\r\n};\r\n\r\nexport default useForm;\r\n","import React, { useEffect } from 'react';\r\nimport { Grid, TextField, Button, withStyles } from '@material-ui/core';\r\nimport { connect } from 'react-redux';\r\nimport useForm from '../useForm';\r\nimport { createMember, updateMember } from '../../actions/members';\r\nimport { useToasts } from 'react-toast-notifications';\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      marginBottom: theme.spacing(3),\r\n      marginRight: theme.spacing(3),\r\n    },\r\n  },\r\n  buttonMargin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n});\r\n\r\nconst initialFieldValues = {\r\n  nama: '',\r\n  alamat: '',\r\n  no_hp: '',\r\n};\r\n\r\nconst MembersForm = ({ classes, ...props }) => {\r\n  const { addToast } = useToasts();\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors };\r\n    if ('nama' in fieldValues)\r\n      temp.nama = fieldValues.nama ? '' : 'Tidak boleh kosong';\r\n    if ('alamat' in fieldValues)\r\n      temp.alamat = fieldValues.alamat ? '' : 'Tidak boleh kosong';\r\n    if ('no_hp' in fieldValues)\r\n      temp.no_hp = fieldValues.no_hp ? '' : 'Tidak boleh kosong';\r\n    setErrors({\r\n      ...temp,\r\n    });\r\n    if (fieldValues === values)\r\n      return Object.values(temp).every((x) => x === '');\r\n  };\r\n\r\n  const {\r\n    values,\r\n    setValues,\r\n    handleInputChange,\r\n    errors,\r\n    setErrors,\r\n    resetForm,\r\n  } = useForm(initialFieldValues, validate, props.setCurrentId);\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (validate()) {\r\n      if (props.currentId === 0) {\r\n        props.createNewMember(\r\n          values,\r\n          () => {\r\n            resetForm();\r\n            addToast('Berhasil membuat member baru', { appearance: 'success' });\r\n          },\r\n          () => {\r\n            addToast('Gagal membuat member baru', { appearance: 'error' });\r\n          }\r\n        );\r\n      } else {\r\n        props.updateMemberRecord(\r\n          props.currentId,\r\n          values,\r\n          () => {\r\n            resetForm();\r\n            addToast('Berhasil mengupdate member', { appearance: 'success' });\r\n          },\r\n          () => {\r\n            addToast('Gagal mengupdate member', { appearance: 'error' });\r\n          }\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.currentId !== 0) {\r\n      setValues({\r\n        ...props.membersList.find((x) => x.id_member === props.currentId),\r\n      });\r\n      setErrors({});\r\n    }\r\n  }, [props.currentId]);\r\n\r\n  return (\r\n    <form\r\n      autoComplete=\"off\"\r\n      noValidate\r\n      className={classes.root}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <Grid container>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            name=\"nama\"\r\n            variant=\"outlined\"\r\n            label=\"Nama\"\r\n            value={values.nama}\r\n            onChange={handleInputChange}\r\n            fullWidth\r\n            inputProps={{\r\n              maxLength: 45,\r\n            }}\r\n            {...(errors.nama && { error: true, helperText: errors.nama })}\r\n          />\r\n          <TextField\r\n            name=\"alamat\"\r\n            variant=\"outlined\"\r\n            label=\"Alamat\"\r\n            value={values.alamat}\r\n            onChange={handleInputChange}\r\n            fullWidth\r\n            inputProps={{\r\n              maxLength: 45,\r\n            }}\r\n            {...(errors.alamat && { error: true, helperText: errors.alamat })}\r\n          />\r\n\r\n          <TextField\r\n            name=\"no_hp\"\r\n            variant=\"outlined\"\r\n            label=\"No HP\"\r\n            type=\"number\"\r\n            value={values.no_hp}\r\n            onChange={handleInputChange}\r\n            fullWidth\r\n            inputProps={{\r\n              maxLength: 12,\r\n            }}\r\n            {...(errors.no_hp && { error: true, helperText: errors.no_hp })}\r\n          />\r\n          <div>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              type=\"submit\"\r\n              className={classes.buttonMargin}\r\n            >\r\n              Submit\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              className={classes.buttonMargin}\r\n              onClick={resetForm}\r\n            >\r\n              Reset\r\n            </Button>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    membersList: state.membersRequest.list,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  createNewMember: createMember,\r\n  updateMemberRecord: updateMember,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withStyles(styles)(MembersForm));\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchMembers, deleteMember } from '../../actions/members';\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  withStyles,\r\n  ButtonGroup,\r\n  Button,\r\n} from '@material-ui/core';\r\nimport { Edit, Delete } from '@material-ui/icons';\r\nimport MembersForm from './MembersForm';\r\nimport { useToasts } from 'react-toast-notifications';\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    '& .MuiTableCell-head': {\r\n      fontSize: '1.25rem',\r\n    },\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(4),\r\n    padding: theme.spacing(4),\r\n  },\r\n});\r\n\r\nconst Members = ({ classes, ...props }) => {\r\n  const { addToast } = useToasts();\r\n\r\n  const [currentId, setCurrentId] = useState(0);\r\n\r\n  useEffect(() => {\r\n    props.fetchAllMembers();\r\n  }, []);\r\n\r\n  const onDelete = (id) => {\r\n    if (window.confirm('Hapus member?'))\r\n      props.deleteMemberRecord(id, () => {\r\n        addToast('Berhasil menghapus member', { appearance: 'info' });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.paper} elevation={3}>\r\n      <Grid container>\r\n        <Grid item xs={6}>\r\n          <MembersForm {...{ currentId, setCurrentId }} />\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <TableContainer>\r\n            <TableHead className={classes.root}>\r\n              <TableRow>\r\n                <TableCell>Nama</TableCell>\r\n                <TableCell>Alamat</TableCell>\r\n                <TableCell>No HP</TableCell>\r\n                <TableCell></TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {props.membersList.map((record) => {\r\n                return (\r\n                  <TableRow key={record.id_member} hover>\r\n                    <TableCell>{record.nama}</TableCell>\r\n                    <TableCell>{record.alamat}</TableCell>\r\n                    <TableCell>{record.no_hp}</TableCell>\r\n                    <TableCell>\r\n                      <ButtonGroup variant=\"text\">\r\n                        <Button>\r\n                          <Edit\r\n                            color=\"primary\"\r\n                            onClick={() => {\r\n                              setCurrentId(record.id_member);\r\n                            }}\r\n                          />\r\n                        </Button>\r\n                        <Button>\r\n                          <Delete\r\n                            color=\"secondary\"\r\n                            onClick={() => {\r\n                              onDelete(record.id_member);\r\n                            }}\r\n                          />\r\n                        </Button>\r\n                      </ButtonGroup>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </TableContainer>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    membersList: state.membersRequest.list,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchAllMembers: fetchMembers,\r\n  deleteMemberRecord: deleteMember,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withStyles(styles)(Members));\r\n","import React, { useEffect } from 'react';\r\nimport { Grid, TextField, Button, withStyles } from '@material-ui/core';\r\nimport { connect } from 'react-redux';\r\nimport useForm from '../useForm';\r\nimport { createBuku, updateBuku } from '../../actions/buku';\r\nimport { useToasts } from 'react-toast-notifications';\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      marginBottom: theme.spacing(3),\r\n      marginRight: theme.spacing(3),\r\n    },\r\n  },\r\n  buttonMargin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n});\r\n\r\nconst initialFieldValues = {\r\n  judul: '',\r\n  pengarang: '',\r\n  tahun_terbit: '',\r\n};\r\n\r\nconst BukuForm = ({ classes, ...props }) => {\r\n  const { addToast } = useToasts();\r\n\r\n  const validate = (fieldValues = values) => {\r\n    let temp = { ...errors };\r\n    if ('judul' in fieldValues)\r\n      temp.judul = fieldValues.judul ? '' : 'Tidak boleh kosong';\r\n    if ('pengarang' in fieldValues)\r\n      temp.pengarang = fieldValues.pengarang ? '' : 'Tidak boleh kosong';\r\n    if ('tahun_terbit' in fieldValues)\r\n      temp.tahun_terbit = fieldValues.tahun_terbit ? '' : 'Tidak boleh kosong';\r\n    setErrors({\r\n      ...temp,\r\n    });\r\n    if (fieldValues === values)\r\n      return Object.values(temp).every((x) => x === '');\r\n  };\r\n\r\n  const {\r\n    values,\r\n    setValues,\r\n    handleInputChange,\r\n    errors,\r\n    setErrors,\r\n    resetForm,\r\n  } = useForm(initialFieldValues, validate, props.setCurrentId);\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (validate()) {\r\n      if (props.currentId === 0) {\r\n        props.createNewBuku(\r\n          values,\r\n          () => {\r\n            resetForm();\r\n            addToast('Berhasil membuat buku baru', { appearance: 'success' });\r\n          },\r\n          () => {\r\n            addToast('Gagal membuat buku baru', { appearance: 'error' });\r\n          }\r\n        );\r\n      } else {\r\n        props.updateBukuRecord(\r\n          props.currentId,\r\n          values,\r\n          () => {\r\n            resetForm();\r\n            addToast('Berhasil mengupdate buku', { appearance: 'success' });\r\n          },\r\n          () => {\r\n            addToast('Gagal mengupdate buku', { appearance: 'error' });\r\n          }\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.currentId !== 0) {\r\n      setValues({\r\n        ...props.bukuList.find((x) => x.id_buku === props.currentId),\r\n      });\r\n      setErrors({});\r\n    }\r\n  }, [props.currentId]);\r\n\r\n  return (\r\n    <form\r\n      autoComplete=\"off\"\r\n      noValidate\r\n      className={classes.root}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <Grid container>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            name=\"judul\"\r\n            variant=\"outlined\"\r\n            label=\"Judul\"\r\n            value={values.judul}\r\n            onChange={handleInputChange}\r\n            fullWidth\r\n            inputProps={{\r\n              maxLength: 45,\r\n            }}\r\n            {...(errors.judul && { error: true, helperText: errors.judul })}\r\n          />\r\n          <TextField\r\n            name=\"pengarang\"\r\n            variant=\"outlined\"\r\n            label=\"Pengarang\"\r\n            value={values.pengarang}\r\n            onChange={handleInputChange}\r\n            fullWidth\r\n            inputProps={{\r\n              maxLength: 45,\r\n            }}\r\n            {...(errors.pengarang && {\r\n              error: true,\r\n              helperText: errors.pengarang,\r\n            })}\r\n          />\r\n\r\n          <TextField\r\n            name=\"tahun_terbit\"\r\n            variant=\"outlined\"\r\n            label=\"Tahun Terbit\"\r\n            type=\"number\"\r\n            value={values.tahun_terbit}\r\n            onChange={handleInputChange}\r\n            fullWidth\r\n            {...(errors.tahun_terbit && {\r\n              error: true,\r\n              helperText: errors.tahun_terbit,\r\n            })}\r\n          />\r\n          <div>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              type=\"submit\"\r\n              className={classes.buttonMargin}\r\n            >\r\n              Submit\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              className={classes.buttonMargin}\r\n              onClick={resetForm}\r\n            >\r\n              Reset\r\n            </Button>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    bukuList: state.bukuRequest.list,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  createNewBuku: createBuku,\r\n  updateBukuRecord: updateBuku,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withStyles(styles)(BukuForm));\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchBuku, deleteBuku } from '../../actions/buku';\r\nimport { createPeminjaman } from '../../actions/peminjaman';\r\nimport BukuForm from './BukuForm';\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  withStyles,\r\n  ButtonGroup,\r\n  Button,\r\n} from '@material-ui/core';\r\nimport { Edit, Delete, Add } from '@material-ui/icons';\r\nimport { useToasts } from 'react-toast-notifications';\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    '& .MuiTableCell-head': {\r\n      fontSize: '1.25rem',\r\n    },\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(4),\r\n    padding: theme.spacing(4),\r\n  },\r\n});\r\n\r\nconst Buku = ({ classes, ...props }) => {\r\n  const { addToast } = useToasts();\r\n\r\n  const [currentId, setCurrentId] = useState(0);\r\n\r\n  useEffect(() => {\r\n    props.fetchAllBuku();\r\n  }, []);\r\n\r\n  const onDelete = (id) => {\r\n    if (window.confirm('Hapus buku?'))\r\n      props.deleteBukuRecord(id, () => {\r\n        addToast('Berhasil menghapus buku', { appearance: 'info' });\r\n      });\r\n  };\r\n\r\n  const onAddPeminjaman = (id) => {\r\n    if (window.confirm('pinjam buku?'))\r\n      props.createNewPeminjaman(id, () => {\r\n        addToast('Berhasil meminjam buku', { appearance: 'success' });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.paper} elevation={3}>\r\n      <Grid container>\r\n        <Grid item xs={6}>\r\n          <BukuForm {...{ currentId, setCurrentId }} />\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <TableContainer>\r\n            <TableHead className={classes.root}>\r\n              <TableRow>\r\n                <TableCell>Judul</TableCell>\r\n                <TableCell>Pengarang</TableCell>\r\n                <TableCell>Tahun Terbit</TableCell>\r\n                <TableCell></TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {props.bukuList.map((record) => {\r\n                return (\r\n                  <TableRow key={record.id_buku} hover>\r\n                    <TableCell>{record.judul}</TableCell>\r\n                    <TableCell>{record.pengarang}</TableCell>\r\n                    <TableCell>{record.tahun_terbit}</TableCell>\r\n                    <TableCell>\r\n                      <ButtonGroup variant=\"text\">\r\n                        <Button>\r\n                          <Add\r\n                            color=\"action\"\r\n                            onClick={() => {\r\n                              onAddPeminjaman(record.id_buku);\r\n                            }}\r\n                          />\r\n                        </Button>\r\n                        <Button>\r\n                          <Edit\r\n                            color=\"primary\"\r\n                            onClick={() => {\r\n                              setCurrentId(record.id_buku);\r\n                            }}\r\n                          />\r\n                        </Button>\r\n                        <Button>\r\n                          <Delete\r\n                            color=\"secondary\"\r\n                            onClick={() => {\r\n                              onDelete(record.id_buku);\r\n                            }}\r\n                          />\r\n                        </Button>\r\n                      </ButtonGroup>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </TableContainer>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    bukuList: state.bukuRequest.list,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchAllBuku: fetchBuku,\r\n  deleteBukuRecord: deleteBuku,\r\n  createNewPeminjaman: createPeminjaman,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withStyles(styles)(Buku));\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  fetchPeminjaman,\r\n  deletePeminjaman,\r\n  updatePeminjaman,\r\n} from '../actions/peminjaman';\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  withStyles,\r\n  ButtonGroup,\r\n  Button,\r\n} from '@material-ui/core';\r\nimport { Check, Delete } from '@material-ui/icons';\r\nimport { useToasts } from 'react-toast-notifications';\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    '& .MuiTableCell-head': {\r\n      fontSize: '1.25rem',\r\n    },\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(4),\r\n    padding: theme.spacing(4),\r\n  },\r\n});\r\n\r\nconst Peminjaman = ({ classes, ...props }) => {\r\n  const { addToast } = useToasts();\r\n\r\n  useEffect(() => {\r\n    props.fetchAllPeminjaman();\r\n  }, []);\r\n\r\n  const onDelete = (id) => {\r\n    if (window.confirm('Hapus peminjaman?'))\r\n      props.deletePeminjamanRecord(id, () => {\r\n        addToast('Berhasil menghapus peminjaman', { appearance: 'info' });\r\n      });\r\n  };\r\n\r\n  const onUpdatePeminjaman = (id) => {\r\n    if (window.confirm('Kembalikan buku?'))\r\n      props.updatePeminjamanRecord(id, () => {\r\n        addToast('Berhasil mengembalikan buku', { appearance: 'success' });\r\n      });\r\n  };\r\n  return (\r\n    <Paper className={classes.paper} elevation={3}>\r\n      <Grid container>\r\n        <Grid item lg={12}>\r\n          <TableContainer>\r\n            <TableHead className={classes.root}>\r\n              <TableRow>\r\n                <TableCell>Nama Peminjam</TableCell>\r\n                <TableCell>Buku</TableCell>\r\n                <TableCell>Tanggal Peminjaman</TableCell>\r\n                <TableCell>Tanggal Pengembalian</TableCell>\r\n                <TableCell></TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {props.peminjamanList.map((record) => {\r\n                return (\r\n                  <TableRow key={record.id_peminjaman} hover>\r\n                    <TableCell>{record.nama}</TableCell>\r\n                    <TableCell>{record.judul}</TableCell>\r\n                    <TableCell>{record.tanggal_peminjaman}</TableCell>\r\n                    <TableCell>\r\n                      {record.tanggal_pengembalian === null\r\n                        ? 'Belum dikembalikan'\r\n                        : record.tanggal_pengembalian}\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <ButtonGroup variant=\"text\">\r\n                        <Button>\r\n                          <Check\r\n                            color=\"primary\"\r\n                            onClick={() => {\r\n                              onUpdatePeminjaman(record.id_peminjaman);\r\n                            }}\r\n                          />\r\n                        </Button>\r\n                        <Button>\r\n                          <Delete\r\n                            color=\"secondary\"\r\n                            onClick={() => {\r\n                              onDelete(record.id_peminjaman);\r\n                            }}\r\n                          />\r\n                        </Button>\r\n                      </ButtonGroup>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </TableContainer>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    peminjamanList: state.peminjamanRequest.list,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchAllPeminjaman: fetchPeminjaman,\r\n  deletePeminjamanRecord: deletePeminjaman,\r\n  updatePeminjamanRecord: updatePeminjaman,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withStyles(styles)(Peminjaman));\r\n","import React, { useState } from 'react';\nimport './App.css';\nimport { store } from './actions/store';\nimport { Provider } from 'react-redux';\nimport Members from './components/member/Members';\nimport Buku from './components/buku/Buku';\nimport Peminjaman from './components/Peminjaman';\nimport {\n  Container,\n  AppBar,\n  Tabs,\n  Tab,\n  Typography,\n  Box,\n} from '@material-ui/core';\nimport { ToastProvider } from 'react-toast-notifications';\n\nfunction TabPanel(props) {\n  const { children, value, index } = props;\n  console.log(value);\n  return (\n    <Typography\n      component=\"span\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      // aria-labelledby={`simple-tab-${index}`}\n    >\n      <Box>{value === index && children}</Box>\n    </Typography>\n  );\n}\n\nconst App = (props) => {\n  const [value, setValue] = useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <Provider store={store}>\n      <ToastProvider autoDismiss={true}>\n        <Container maxWidth=\"lg\">\n          <AppBar position=\"static\">\n            <Tabs\n              value={value}\n              aria-label=\"simple tabs example\"\n              onChange={handleChange}\n            >\n              <Tab label=\"Member\" />\n              <Tab label=\"Buku\" />\n              <Tab label=\"Peminjaman\" />\n            </Tabs>\n          </AppBar>\n          <TabPanel value={value} index={0}>\n            <Members />\n          </TabPanel>\n          <TabPanel value={value} index={1}>\n            <Buku />\n          </TabPanel>\n          <TabPanel value={value} index={2}>\n            <Peminjaman />\n          </TabPanel>\n        </Container>\n      </ToastProvider>\n    </Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}